services:
  test:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web-scraper-tester
    environment:
      - PYTEST_ADDOPTS=--cov-report=term --cov-report=html:/tmp/cov_html
      - PYTHONUNBUFFERED=1
    volumes:
      - ./tests:/home/appuser/app/tests
      - ./src:/home/appuser/app/src
    shm_size: '2gb'
    ipc: host
    cap_add:
      - SYS_ADMIN
    init: true
    command: pytest tests/unit tests/functional
    stop_signal: SIGINT

  test-all:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web-scraper-tester-all
    environment:
      - PYTEST_ADDOPTS=--cov-report=term --cov-report=html:/tmp/cov_html
      - PYTHONUNBUFFERED=1
    volumes:
      - ./tests:/home/appuser/app/tests
      - ./src:/home/appuser/app/src
    shm_size: '2gb'
    ipc: host
    cap_add:
      - SYS_ADMIN
    init: true
    security_opt:
      - seccomp:unconfined
    ulimits:
      memlock:
        soft: -1
        hard: -1
    command: pytest --cov=src --cov-report=term-missing --cov-fail-under=8

  test-unit:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: web-scraper-tester-unit
    environment:
      - PYTEST_ADDOPTS=--cov-report=term --cov-report=html:/tmp/cov_html
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/home/appuser/app
    volumes:
      - ./tests:/home/appuser/app/tests
      - ./src:/home/appuser/app/src
    shm_size: '2gb'
    ipc: host
    cap_add:
      - SYS_ADMIN
    init: true
    command: pytest tests/unit tests/functional
    stop_signal: SIGINT

  test-e2e:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./tests:/home/appuser/app/tests
      - ./src:/home/appuser/app/src
    command: pytest tests/e2e/test_mcp_server.py

  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mcp-server
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/home/appuser/app/src
    working_dir: /home/appuser/app
    command: python3 src/mcp_server.py
    ports:
      - "8000:8000"
    shm_size: '2gb'
    ipc: host
    cap_add:
      - SYS_ADMIN
    init: true
    networks:
      - mcpnet

  test-integration:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: mcp-test-integration
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/home/appuser/app
    volumes:
      - ./tests:/home/appuser/app/tests
      - ./src:/home/appuser/app/src
    working_dir: /home/appuser/app
    entrypoint: ["pytest", "tests/integration/test_mcp_server_stdio.py"]
    shm_size: '2gb'
    ipc: host
    cap_add:
      - SYS_ADMIN
    init: true
    networks:
      - mcpnet

networks:
  mcpnet:
    driver: bridge
